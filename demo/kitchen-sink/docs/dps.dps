/***************************************************************
* Copyright (c) 2014-2016 Andrey Boldak                        *
* MIT License - http://opensource.org/licenses/mit-license.php *
*                                                              *
*              DJ Data Processing Script Example               *
*                                                              *
****************************************************************
* File: postprocess.dps                                        *
*                                                              *
* Description: Join tables                                     *
*                                                              *
****************************************************************/

meta('$..dataset.topics')
distinct()
extend()
translate()
set('tg')

<?javascript
  $context.tg = $context.tg.map(function(item){
   return item.map(function(d){
     return ((d.label) ? d.label : d)
   })
});
?>

<?json
  [1,2,3,["a",{"a":"a"}]]
?>

<?text
  text
  text
  text
?>

<?dps
  get('tg')
  concat()
  distinct()
?>

<?html
  <div class="row"></div>
?>

<?xml
  <tag class="row">
    <child>
    </child>
  </tag>
?>

<?csv
DATE;HOUR;MINUTE;AVG;MIN;MAX;HH;H;L;LL;MEASURE
"20160101";"00";"";"143.73";"";"";"";"";"";"";"Rh/h"
"20160101";"01";"";"143.79";"";"";"";"";"";"";"Rh/h"
"20160101";"02";"";"143.68";"";"";"";"";"";"";"Rh/h"
"20160101";"03";"";"143.85";"";"";"";"";"";"";"Rh/h"
"20160101";"04";"";"143.73";"";"";"";"";"";"";"Rh/h"
"20160101";"05";"";"143.75";"";"";"";"";"";"";"Rh/h"
"20160101";"06";"";"143.55";"";"";"";"";"";"";"Rh/h"
?>

get('tg')
concat()
distinct()
set('t')

meta('$..dataset.label')
distinct()
translate()
set('ds')

<?javascript

 $context.tab = {};
 
 $context.tab.header = $context.t.map(function(tag){
    return {
      metadata:[{
        id:tag, 
        label:tag, 
        dimension:'tag',
        dimensionLabel:'tag',
        role:'metric'
      }]
    }
 })

 var dm = [];
 $context.tg.forEach(function(s){
   var row = [] 
   for(var i = 0; i<$context.t.length; i++) row.push(0)
   s.forEach(function(tag){
    row[$context.t.indexOf(tag)] = 1;
   })
   dm.push(row)   
 })

$context.tab.body = dm.map(function(row,index){
  return {
    metadata:[{
      id:$context.ds[index], 
      label:$context.ds[index], 
      dimension:'indicator',
      dimensionLabel:'indicator', 
      role:'metric'
    }], 
    value: row
  }
});



?>
js()
get('tab')

table()

pca(for:'col', return:'scores')
limit(2)
transpose()
scatter(x:0,y:[1])
cache()


source(ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02')
json()

query([
  { dim:'time', role:'row', items:["aaa",""] },
  { dim:'indicator', role:'col', items:[0] } 
])

set('t1')

norm(dir:'col', mode:'0,1')
format(p:3)
set('t2')

get('t1'); json()
norm(dir:'col', mode:'std')
format(p:3)
set('t3')

get('t1')
norm(dir:'col', mode:'log')
format(p:3)
set('t4')

get("t1")
join( with:{{t2}}, mode:'left', as:'Ranged ')
join( with:{{t3}}, mode:'left', as:'Standartized ')
join( with:{{t4}}, mode:'left', as:'Logistic ')

scatter(x:0,index:[1,2,3])